name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  phpunit:
    name: PHPUnit (PHP ${{ matrix.php-version }})
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: 'mysql://root:root@127.0.0.1:3306/ask_me_anything'

    services:
      mysql:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: root
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      matrix:
        php-version:
          - '8.3'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v4
        id: yarn-cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-cache-node-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-cache-node-modules-

      - name: Yarn install
        if: steps.yarn-cache-node-modules.outputs.cache-hit != 'true'
        run: yarn install --force

      - name: Yarn build
        run: yarn run encore production

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Install Composer dependencies
        uses: ramsey/composer-install@v3

      - name: Load Doctrine fixtures
        run: |
          bin/console doctrine:database:create --if-not-exists --env=test
          bin/console doctrine:schema:drop --force --env=test
          bin/console doctrine:schema:create --env=test
          bin/console doctrine:schema:validate --env=test
          bin/console hautelook:fixtures:load --no-interaction --no-bundles --env=test

      - name: Run PHPUnit
        run: vendor/bin/phpunit
